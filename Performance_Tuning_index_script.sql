
SELECT * FROM CUSTOMER;


--ALtering the  Coulmn Name with More than One Space between them--- 

ALTER  TABLE  CUSTOMER RENAME COLUMN  CITY TO "CITY DETAILS" ;

ALTER  TABLE  CUSTOMER RENAME COLUMN  CITIES TO CITY ;


---THIS WILL HELP IN FETCHING THE DBA i.e SYS DETAILS AS WELL FOR USER AND VIEWS---
SELECT * FROM DBA_VIEWS;
SELECT * FROM DBA_USERS;

---for all accessible views (accessible by logged user)---
SELECT * FROM ALL_USERS;
SELECT * FROM ALL_VIEWS;


--for the user accessable view and users are---
SELECT * FROM USER_VIEWS;


--CREATING THE INDEX AND FETCHING THE CORRESPONDING  ROWID----

CREATE INDEX SALES_DATE_INDEX ON SALES(SALES_DATE);


SELECT S.SALES_DATE AS DATE_OF_SALE, ROWID FROM SALES S;

SELECT SALES_DATE,ROWID FROM SALES WHERE SALES_DATE='01-jan-2015';

--CREATING THE INDEX AS COMBO AND FETCHING THE CORRESPONDING  ROWID----

CREATE INDEX SALES_COMBO ON SALES S (S.SALES_DATE, S.ORDER_ID);

SELECT S.SALES_DATE AS DATE_OF_SALE, ROWID FROM SALES S;


--- WE WILL BE CREATING UNIQUE INDEX FOR THE PERFORMANCE TUNING AS ---

CREATE UNIQUE INDEX CUSTOMER_REGION_INDEX ON CUSTOMER(REGION,"CITY DETAILS" );

-- THIS WILL ENFORCE AN UNIQUE CONSTRAINT ON BOTH THE TABLE HENCE  DUPLICATE NOT ALLOWED---

-- BUT AS WE HAVE NOT MAKE IT NOT NULL YET IT CAN ACCEPT THE NULL VALUE FOR MULTIPLE COLUMNS---

---IT HAS HIS OWN ENTRYPOINT WHICH WILL HELP IN SEARCHING WITH THE HELP OF ROWID --


--- ALTERING THE NAME OF THE INDEX FOR BOTH UNIQUE AND STANDALONE INDEX AND COMBO INDEX AS WELL--

ALTER INDEX CUSTOMER_REGION_INDEX RENAME TO NEW_CUSTOMER_REGION_INDEX;

---NOW ITS TOME TO DROP A COMBO / SINGLE INDEX WHICH IS PRETTY SIMPLE---

DROP INDEX NEW_CUSTOMER_REGION_INDEX ;

