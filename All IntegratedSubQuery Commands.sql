
SELECT * FROM SALES;

--Normal SUBQUERY WITH FROM Clause ----

SELECT S.SALES_DATE ,S.ORDER_ID,ST2.S_TAX
FROM SALES S,
(
--subquery--
SELECT SUM(ST1.TAX_AMOUNT) AS S_TAX  FROM SALES  ST1
)ST2;


---using the SUBQUERY with FROM and Integrating with the GROUP  BY--

SELECT DISTINCT S.CUSTOMER_ID, S.ORDER_ID, S.SALES_DATE,
ST2.S_TAX_AMT
FROM SALES S,
(
--subquery--
SELECT  ST1.CUSTOMER_ID AS S_CUST, ST1.PRODUCT_ID AS S_PRD , SUM(ST1.TAX_AMOUNT) AS S_TAX_AMT
FROM SALES ST1 GROUP BY CUSTOMER_ID,PRODUCT_ID
) ST2
WHERE S.CUSTOMER_ID=ST2.S_CUST;

--OR--


SELECT DISTINCT S.CUSTOMER_ID, S.ORDER_ID, S.SALES_DATE ,
ST2.S_TAX_AMT
FROM SALES S,
(
--subquery--
SELECT  ST1.SALES_DATE AS S_DATE , SUM(ST1.TAX_AMOUNT) AS S_TAX_AMT
FROM SALES ST1 GROUP BY SALES_DATE
) ST2
WHERE S.SALES_DATE=ST2.S_DATE;










SELECT SALES_DATE,TAX_AMOUNT FROM SALES GROUP BY SALES_DATE, TAX_AMOUNT HAVING AVG(TAX_AMOUNT)>60 ORDER BY SALES_DATE ;

-----CO RELATED SUBQUERY--------

SELECT DISTINCT S.CUSTOMER_ID,S.ORDER_ID,S.SALES_DATE,S.TAX_AMOUNT
FROM SALES S WHERE TAX_AMOUNT >
(
SELECT AVG(ST1.TAX_AMOUNT) AS S_TAX
FROM SALES ST1
WHERE S.CUSTOMER_ID= ST1.CUSTOMER_ID
) ;

